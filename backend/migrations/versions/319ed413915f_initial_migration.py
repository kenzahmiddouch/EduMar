"""Initial migration.

Revision ID: 319ed413915f
Revises: 
Create Date: 2024-07-12 01:30:18.011812

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '319ed413915f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('classe', schema=None) as batch_op:
        batch_op.alter_column('class_nom',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=128),
               existing_nullable=False)

    with op.batch_alter_table('cours', schema=None) as batch_op:
        ##batch_op.drop_index('idclass_idx')
        batch_op.drop_index('idcours_UNIQUE')
        batch_op.drop_index('idprof_idx')

    with op.batch_alter_table('person', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idPerson', sa.Integer(), nullable=False))
        batch_op.alter_column('nom',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('prenom',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('type',
               existing_type=mysql.ENUM('Admin', 'student', 'prof'),
               type_=sa.Enum('Admin', 'professeur', 'student', name='type'),
               existing_nullable=False)
        batch_op.drop_index('idperson_UNIQUE')
        batch_op.drop_column('idperson')

    with op.batch_alter_table('prof', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.alter_column('idprof',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('matier',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=256),
               nullable=True)
        batch_op.drop_index('idprof_UNIQUE')
        batch_op.drop_constraint('idprof', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['idprof'], ['idPerson'])

    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('id_student', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('id_classe', sa.Integer(), nullable=True))
        ##batch_op.drop_index('idclass_idx')
        batch_op.drop_index('idstudent_UNIQUE')
        batch_op.drop_constraint('idclasse', type_='foreignkey')
        batch_op.drop_constraint('idstudent', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['id_student'], ['idPerson'])
        batch_op.create_foreign_key(None, 'classe', ['id_classe'], ['idclasse'])
        batch_op.drop_column('idclasse')
        batch_op.drop_column('idstudent')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idstudent', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('idclasse', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('idstudent', 'person', ['idstudent'], ['idperson'])
        batch_op.create_foreign_key('idclasse', 'classe', ['idclasse'], ['idclasse'])
        batch_op.create_index('idstudent_UNIQUE', ['idstudent'], unique=True)
        batch_op.create_index('idclass_idx', ['idclasse'], unique=False)
        batch_op.drop_column('id_classe')
        batch_op.drop_column('id_student')
        batch_op.drop_column('id')

    with op.batch_alter_table('prof', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('idprof', 'person', ['idprof'], ['idperson'])
        batch_op.create_index('idprof_UNIQUE', ['idprof'], unique=True)
        batch_op.alter_column('matier',
               existing_type=sa.String(length=256),
               type_=mysql.VARCHAR(length=45),
               nullable=False)
        batch_op.alter_column('idprof',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.drop_column('id')

    with op.batch_alter_table('person', schema=None) as batch_op:
        batch_op.add_column(sa.Column('idperson', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_index('idperson_UNIQUE', ['idperson'], unique=True)
        batch_op.alter_column('type',
               existing_type=sa.Enum('Admin', 'professeur', 'student', name='type'),
               type_=mysql.ENUM('Admin', 'student', 'prof'),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
        batch_op.alter_column('prenom',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
        batch_op.alter_column('nom',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
        batch_op.drop_column('idPerson')

    with op.batch_alter_table('cours', schema=None) as batch_op:
        batch_op.create_index('idprof_idx', ['idprof'], unique=False)
        batch_op.create_index('idcours_UNIQUE', ['idcours'], unique=True)
        batch_op.create_index('idclass_idx', ['idclasse'], unique=False)

    with op.batch_alter_table('classe', schema=None) as batch_op:
        batch_op.create_index('idclasse_UNIQUE', ['idclasse'], unique=True)
        batch_op.alter_column('class_nom',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)

    # ### end Alembic commands ###
